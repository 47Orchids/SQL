/* In this project I used SQL to analyze Spotify data which I downloaded from Kaggle. 
My first step was to insert the data from the .csv file into the table that I created.
Afterwards, I was able to query that data for answering several questions regarding the tracks in the list*/


CREATE TABLE BIT_DB.Spotifydata (
    id               INTEGER        PRIMARY KEY,
    artist_name      VARCHAR        NOT NULL,
    track_name       VARCHAR        NOT NULL,
    track_id         VARCHAR        NOT NULL,
    popularity       INTEGER        NOT NULL,
    danceability     DECIMAL (4, 3) NOT NULL,
    energy           DECIMAL (4, 3) NOT NULL,
    [key]            INTEGER        NOT NULL,
    loudness         DECIMAL (5, 3) NOT NULL,
    mode             INTEGER        NOT NULL,
    speechiness      DECIMAL (5, 4) NOT NULL,
    acousticness     DECIMAL (6, 5) NOT NULL,
    instrumentalness TEXT           NOT NULL,
    liveness         DECIMAL (5, 4) NOT NULL,
    valence          DECIMAL (4, 3) NOT NULL,
    tempo            DECIMAL (6, 3) NOT NULL,
    duration_ms      INTEGER        NOT NULL,
    time_signature   INTEGER        NOT NULL
);

SELECT * FROM BIT_DB.Spotifydata;


-- Which are the top 5 most popular tracks and the artist's name?
SELECT track_name, artist_name, popularity
FROM BIT_DB.Spotifydata
    ORDER BY popularity DESC
    LIMIT 5;
    
/* I found that there is a three-way tie between good 4 u, Bad Habits, Woman - they all have a popularity score of 95. */


-- Which artist has the most tracks that made this list and what are the names of those tracks?
SELECT artist_name, COUNT(track_name)
FROM BIT_DB.Spotifydata
    GROUP BY artist_name
    ORDER BY COUNT(track_name) DESC
    LIMIT 2;
    
/* I found that both Olivia Rodrigo and Doja Cat have 4 tracks that appear on this list, so I included them both. */

SELECT artist_name, track_name
FROM BIT_DB.Spotifydata
    WHERE artist_name IN ("Olivia Rodrigo", "Doja Cat")
    ORDER BY artist_name ASC;


-- What is the average popularity, danceability and tempo of the songs on this list?
SELECT AVG(popularity), AVG(danceability), AVG(tempo)
FROM BIT_DB.Spotifydata;

/* findings: average popularity is 86.8, average danceability is 0.68572 and average tempo is 121.08386. */


-- How do the most popular tracks compare to those averages? (There are 3 tracks with a popularity score of 95).
SELECT track_name, popularity, CASE
    WHEN popularity > 86.8 THEN 'above average'
    WHEN popularity = 86.8 THEN 'average'
    WHEN popularity < 86.8 THEN 'below average'
    END AS popularity_rating, 
        danceability, CASE
          WHEN danceability > 0.68572 THEN 'above average'
          WHEN danceability = 0.68572 THEN 'average'
          WHEN danceability < 0.68572 THEN 'below average'
          END AS danceability_rating,
              tempo, CASE
              WHEN tempo > 121.08386 THEN 'above average'
              WHEN tempo = 121.08386 THEN 'average'
              WHEN tempo < 121.08386 THEN 'below average'
              END AS tempo_rating
                  FROM BIT_DB.Spotifydata
                  GROUP BY track_name      
                  HAVING popularity = 95;
